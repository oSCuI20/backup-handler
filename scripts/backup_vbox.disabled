#!/bin/bash
#
# Eduardo Banderas Alba
# $1=SSH_HOST
#
# path backups if execute as server: ARCHIVEROOT/SSH_HOST/vbox
#                                    ARCHIVEROOT/SSH_HOST/vbox/YYYYMMDD/vbox01.tar.gz
#                                    ARCHIVEROOT/SSH_HOST/vbox/YYYYMMDD/vbox02.tar.gz

# path backups if execute as client: ARCHIVEROOT/hostname/vbox
#                                    ARCHIVEROOT/hostname/vbox/YYYYMMDD/vbox01.tar.gz
#                                    ARCHIVEROOT/hostname/vbox/YYYYMMDD/vbox02.tar.gz

. ${_CONFIGDIR}/manager-functions


main_backup() {
  /bin/echo ""
  checking_global_vars
  now=$(/bin/date +%Y%m%d)

  week_now=$(/bin/date +%u)
  [ "${WEEK_DAY}" != ${week_now} ] && exit 0

  ${SERVER} && HOSTNAME="${host}" || HOSTNAME="$(/bin/hostname -f)"

  backup_dir="${ARCHIVEROOT}/${HOSTNAME}/vbox"
  storage="${backup_dir}/${now}"
  sshauth="--host=$host --user=$SSH_USER --port=$SSH_PORT --keyfile=$SSH_KEY"

  printf "Starting VBox backup, at `/bin/date`\n"

  ${SERVER} && main_backup_server || main_backup_client

  printf "Finish VBox backup, at `/bin/date`\n"
  exit ${retval}
}  #main_backup


main_backup_server() {
  /bin/mkdir -p ${storage}

  for vm in ${VBOX_VM[@]}; do
    _ssh_exec ${sshauth} --cmd="/bin/su -l vbox -c \
                            \"/usr/bin/VBoxManage showvminfo ${vm}\" | \
                              /bin/grep -q running" 2> /dev/null
    retval=$?

    if [ ${retval} -eq 0 ]; then
      backup_vm="${VBOX_PATH}/${vm}"
      filepath="${storage}/${vm}.tar.gz"
      _ssh_exec $sshauth \
               --cmd="/usr/bin/tar -czf - ${backup_vm} | /bin/cat" > ${filepath}
      retval=$?

      if [ ${retval} -eq 0 ]; then
        printf "VM backup successful - ${vm}\n"
      else
        printf "Error when trying compress a vm - ${vm}\n"
      fi

      _ssh_exec ${sshauth} --cmd="/bin/su -l vbox -c
                          \"/usr/bin/VBoxManage startvm ${vm} --type headless\""
      retval=$?

      if [ ${retval} -eq 0 ]; then
        printf "VM started sucessful - ${vm}\n"
      else
        printf "Error when trying start a vm - ${vm}\n"
      fi
    else
      printf "Error the vm ${vm} is running or not exists\n"
    fi
  done  #for vm in ${VBOX_VM[@]}

  if [ ${retval} -eq 0 ]; then
    old_files=$(/usr/bin/find ${backup_dir} -maxdepth 1 -type d \
                                                    -exec /bin/rm -Rvf {} \;)
    printf "Remove old backups\n${old_files}\n"
  else
    printf "Skip remove old backups\n"
  fi
}  #main_backup_server


main_backup_client() {
  _ssh_exec ${sshauth} --cmd="/bin/mkdir -p ${storage}"

  for vm in ${VBOX_VM[@]}; do
    /bin/su -l vbox -c "/usr/bin/VBoxManage showvminfo ${vm}" | \
                                               /bin/grep -q running 2> /dev/null
    retval=$?

    if [ ${retval} -eq 0 ]; then
      backup_vm="${VBOX_PATH}/${vm}"
      filepath="${storage}/${vm}.tar.gz"
      /usr/bin/tar -czf - ${backup_vm} | _ssh_exec ${sshauth} \
                                                    --cmd="/bin/cat ${filepath}"
      retval=$?

      if [ ${retval} -eq 0 ]; then
        printf "VM backup successful - ${vm}\n"
      else
        printf "Error when trying compress a vm - ${vm}\n"
      fi

      /bin/su -l vbox -c "/usr/bin/VBoxManage startvm ${vm} --type headless"
      retval=$?

      if [ ${retval} -eq 0 ]; then
        printf "VM started sucessful - ${vm}\n"
      else
        printf "Error when trying start a vm - ${vm}\n"
      fi
    else
      printf "Error, the vm ${vm} is running or not exists\n"
    fi
  done  #for vm in ${VBOX_VM[@]}
}  #main_backup_client


checking_global_vars() {
  if [ -z "${SSH_HOST}" ] || [ "${SSH_HOST}" == "" ]; then
    printf "SSH_HOST not defined\n"
    exit 1
  fi

  if [ -z "${SSH_USER}" ] || [ "${SSH_USER}" == "" ]; then
    printf "SSH_USER not defined\n"
    exit 1
  fi

  if [ -z "${SSH_PORT}" ] || [ "${SSH_PORT}" == "" ] || \
     [[ ! "${SSH_PORT}" =~ [0-9]+ ]]; then
    printf "SSH_PORT not defined or value is not numeric\n"
    exit 1
  fi

  if [ -z "${SSH_KEY}" ] || [ "${SSH_KEY}" == "" ] || \
     [ ! -f "${SSH_KEY}" ]; then
    printf "SSH_KEY not defined or file not exists\n"
    exit 1
  fi

  if [ -z "${SSH_USER}" ] || [ "${SSH_USER}" == "" ]; then
    printf "SSH_USER not defined"
    exit 1
  fi

  if [ -z "${VBOX_VM}" ] || [ "${VBOX_VM}" == "" ]; then
    printf "VBOX_VM not defined\n"
    exit 1
  fi

  if [ -z "${VBOX_PATH}" ] || [ "${VBOX_PATH}" == "" ]; then
    printf "VBOX_PATH not defined\n"
    exit 1
  fi

  if [ -z "${TEMPDIR}" ] || [ "${TEMPDIR}" == "" ] || \
     [ ! -d "${TEMPDIR}" ]; then
    TEMPDIR=/var/tmp
  fi

  if [ -z "${DAYS}" ] || [ "${DAYS}" == "" ]; then
    DAYS=25
  fi
}  #checking_global_vars


if [ -z "${1}" ]; then
  printf "Not exists arguments for the script. \$1 should a \
ip address of ssh or domain name\n"
  exit 1
fi
host="${1}"

main_backup
